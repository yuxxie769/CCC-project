{"remainingRequest":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/src/views/Analysis.vue?vue&type=style&index=0&id=688411d4&scoped=true&lang=css","dependencies":[{"path":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/src/views/Analysis.vue","mtime":1651320474609},{"path":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/node_modules/css-loader/dist/cjs.js","mtime":1651237651218},{"path":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1651237651749},{"path":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/node_modules/postcss-loader/src/index.js","mtime":1651237651334},{"path":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1651237650956},{"path":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1651237651706}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5iYXJfY2hhcnQgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNjAwcHg7Cn0K"},{"version":3,"sources":["/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/src/views/Analysis.vue"],"names":[],"mappings":";AAgKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACf","file":"/Users/gutiancheng/Desktop/ccc_proj2/COMP90024_Project2/frontend/src/views/Analysis.vue","sourceRoot":"","sourcesContent":["// Hanzhen Yang 1070951, \n// Hanzhong Wang, 1029740,\n// Quan Zhou 1065302, \n// Yuhang Xie 1089250, \n// Ze Liu 1073628\n<template>\n  <div class=\"views\">\n    <div class=\"container\">\n      <!-- <h1>Aurin Data</h1> -->\n      <h2 class=\"mt-5\">Population</h2>\n      <div id=\"vic_population_bar\" class=\"bar_chart mt-5\"></div>\n      <div id=\"nsw_population_bar\" class=\"bar_chart mt-3\"></div>\n      <!-- <div id=\"population_boxplot\" class=\"bar_chart mt-3\"></div> -->\n      <hr />\n      <h2 class=\"mt-5\">Income</h2>\n      <div id=\"vic_income_bar\" class=\"bar_chart mt-5\"></div>\n      <div id=\"nsw_income_bar\" class=\"bar_chart mt-3\"></div>\n      <hr />\n      <h2 class=\"mt-5\">Obesity Rate</h2>\n      <div id=\"vic_obesity_bar\" class=\"bar_chart mt-5\"></div>\n      <div id=\"nsw_obesity_bar\" class=\"bar_chart mt-3\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  setup() {},\n  data() {\n    return {\n      vic: null,\n      nsw: null,\n      aurin: {\n        population: \"population\",\n        income: \"income_2014\",\n        obesity: \"obesity_rate\",\n      },\n    };\n  },\n  watch: {},\n  beforeMount() {\n    // this.fetchData(\"nsw\");\n  },\n  mounted() {\n    this.fetchData(\"vic\");\n    this.fetchData(\"nsw\");\n  },\n  methods: {\n    fetchData(state) {\n      fetch(`http://127.0.0.1:5000/analysis/${state}`)// fetch(`${process.env.VUE_APP_BACKEND_BASE_URL}analysis/${state}`)\n        .then(function (response) {\n          console.log(process.env.VUE_APP_BACKEND_BASE_URL);\n          return response.json();\n        })\n        .then((jsonData) => {\n          this[state] = jsonData.features;\n          this.initBarChart(state, \"population\");\n          this.initBarChart(state, \"income\");\n          this.initBarChart(state, \"obesity\");\n        });\n    },\n    initBarChart(state, dataset) {\n      let stateFullName = this.$store.state.places[state].name;\n      let [x, y] = [[], []];\n      let key = this.aurin[dataset];\n      this[state].forEach((feature) => {\n        let value = feature.properties[key];\n        if (!value) {\n          return true;\n        }\n        let name = feature.properties[`${state}_lga__3`];\n        x.push(name);\n        y.push(\n          dataset !== \"obesity\"\n            ? value\n            : ((value / feature.properties.population) * 100).toFixed(4)\n        );\n      });\n      console.log(`${state}_${dataset}_bar`);\n      var chartDom = document.getElementById(`${state}_${dataset}_bar`);\n      var myChart = echarts.init(chartDom);\n      var option;\n\n      let title = {\n        income: `The Median Income of ${stateFullName} Residents in 2014`,\n        population: `The Population in Each Local Government Area of ${stateFullName}`,\n        obesity: `The Obesity Rate of People over 18 years old in ${stateFullName}`,\n      };\n\n      let color = {\n        income: \"#5470c6\",\n        population: \"#ffc107\",\n        obesity: \"#20c997\",\n      };\n\n      option = {\n        title: {\n          text: title[dataset],\n          left: \"center\",\n        },\n        color: color[dataset],\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n          },\n          formatter: function (params) {\n            var tar = params[0];\n            let tip = {\n              income: `${tar.name}<br/>AUD $${tar.value}`,\n              population: `${tar.name}<br/>${tar.value}`,\n              obesity: `${tar.name}<br/>${tar.value}%`,\n            };\n            return tip[dataset];\n          },\n        },\n        grid: {\n          top: \"10%\",\n          bottom: \"30%\",\n        },\n        xAxis: {\n          type: \"category\",\n          data: x,\n          axisLabel: {\n            interval: 0,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series: [\n          {\n            data: y,\n            type: \"bar\",\n            showBackground: false,\n            backgroundStyle: {\n              color: \"rgba(180, 180, 180, 0.2)\",\n            },\n          },\n        ],\n        dataZoom: [\n          {\n            show: true,\n            realtime: true,\n            start: 0,\n            end: 30,\n          },\n        ],\n      };\n\n      option && myChart.setOption(option);\n    },\n    initBoxplot() {\n     \n    },\n  },\n};\n</script>\n<style scoped>\n.bar_chart {\n  width: 100%;\n  height: 600px;\n}\n</style>"]}]}